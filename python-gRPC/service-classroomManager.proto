syntax="proto3";

service classroomManager {
    rpc addProfessor(addProfessorRequest) returns (GenericResponse){}
    rpc updateProfessor(updateNameRequest) returns (GenericResponse){}
    rpc deleteProfessor(nameRequest) returns (GenericResponse){}
    rpc getProfessor(nameRequest) returns (professorResponse){}
    rpc getProfessors(Empty) returns (professorsGenericResponse){}
    rpc getProfessorsFromCourse(nameRequest) returns (professorsGenericResponse){}

    rpc addCourse(addCourseRequest) returns (GenericResponse){}
    rpc updateCourse(updateNameRequest) returns (GenericResponse){}
    rpc deleteCourse(nameRequest) returns (GenericResponse){}
    rpc getCourse(nameRequest) returns (courseResponse){}
    rpc getCourses(Empty) returns (coursesGenericResponse){}
    rpc getCoursesFromProfessor(nameRequest) returns (coursesGenericResponse){}
    rpc getCoursesFromStudent(nameRequest) returns (coursesGenericResponse){}


    rpc addStudent(addStudentRequest) returns  (GenericResponse) {}
    rpc updateStudent(updateNameRequest) returns (GenericResponse) {}
    rpc deleteStudent (nameRequest) returns (GenericResponse) {}
    rpc getStudent (nameRequest) returns (studentResponse) {}
    rpc getStudents (Empty) returns (studentsGenericResponse) {}
    rpc getStudentsFromCourse (nameRequest) returns (studentsGenericResponse) {}

}

message Professor {
     string id = 1;
     string name = 2;

}

message Course {
    string id = 1;
    string name = 2;
    string time = 3;
}

message Student {
     string name = 1;
     string matricula = 2;
     string idade = 3;
     string email = 4;
     string telefone = 5;
}

message updateNameRequest {
    string oldName = 1;
    string newName = 2;
}

message nameRequest {
    string name = 1;
}


message GenericResponse {
    string msg = 1;
}

message addProfessorRequest {
    Professor professor = 1;
}

message professorResponse {
    Professor professor = 1;
}

message professorsGenericResponse {

    repeated Professor professor = 1;
}


message addCourseRequest {
   Course course = 1;
}

message courseResponse {
    Course course = 1;
}

message coursesGenericResponse {
    repeated Course course = 1;
}

message addStudentRequest {
    Student student = 1;
}

message studentResponse {
    Student student = 1;
}

message studentsGenericResponse {
    repeated Student student = 1;
}


message Empty {}